package main

import (
	"fmt"
	"time"
)

/*
time.Format函数能够将一个时间对象格式化输出为指定布局的文本表示形式，需要注意的是 Go
语言中时间格式化的布局不是常见的Y-m-d H:M:S，而是使用 2006-01-02 15:04:05.000（
记忆口诀为2006 1 2 3 4 5）。

其中：
	· 2006：年（Y）
	· 01：月（m）
	· 02：日（d）
	· 15：时（H）
	· 04：分（M）
	· 05：秒（S）
补充:
	· 如果想格式化为12小时格式，需在格式化布局中添加PM。
	· 小数部分想保留指定位数就写0，如果想省略末尾可能的0就写 9。
*/

func main() {
	now := time.Now()
	// 格式化的模板为 2006-01-02 15:04:05

	// 24小时制
	fmt.Println(now.Format("2006-01-02 15:04:05.000 Mon Jan"))
	// 12小时制
	fmt.Println(now.Format("2006-01-02 03:04:05.000 PM Mon Jan"))

	// 小数点后写0，因为有3个0所以格式化输出的结果也保留3位小数
	fmt.Println(now.Format("2006/01/02 15:04:05.000")) // 2022/02/27 00:10:42.960
	// 小数点后写9，会省略末尾可能出现的0
	fmt.Println(now.Format("2006/01/02 15:04:05.999")) // 2022/02/27 00:10:42.96

	// 只格式化时分秒部分
	fmt.Println(now.Format("15:04:05"))
	// 只格式化日期部分
	fmt.Println(now.Format("2006.01.02"))
}
